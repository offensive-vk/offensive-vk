name: üõú Automated Workflows Logs

on:
  pull_request:
    types: [opened]
  workflow_dispatch:
    inputs:
      number:
        description: 'Issue or PR Number to Execute Workflow'
        required: true
        default: '27000'

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  fetch-workflows:
    name: Fetch Workflows and Status
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install jq and gh
        run: |
          sudo apt-get update
          sudo apt-get install -y jq gh

      - name: üìä Fetch Workflow Statuses
        id: fetch-status
        env:
          GH_TOKEN: ${{ github.token || secrets.BOT_TOKEN }}
        run: |
          BRANCH=${{ github.head_ref || github.ref_name }}
          gh workflow list --json name,id,state,path --limit 100 > workflows.json

          if [ ! -s workflows.json ]; then
            echo "No workflows found or workflows are unavailable." > workflows_summary.txt
            echo "No active workflows for this issue/PR." >> workflows_summary.txt
            echo "total_workflows=0" >> $GITHUB_ENV
            echo "running_workflows=0" >> $GITHUB_ENV
            echo "successful_workflows=0" >> $GITHUB_ENV
            exit 0
          fi

          # Filter workflows enabled for the event branch
          filtered_workflows=$(jq --arg branch "$BRANCH" '[.[] | select(.path | contains($branch))]' workflows.json)

          echo "| Workflow Name           | ID          | State       |" > workflows_summary.md
          echo "|-------------------------|-------------|-------------|" >> workflows_summary.md
          if [ "$filtered_workflows" != "[]" ]; then
            jq -r '.[] | "| \(.name) | \(.id) | \(.state) |"' <<< "$filtered_workflows" >> workflows_summary.md
          else
            echo "| No relevant workflows found | N/A | N/A |" >> workflows_summary.md
          fi

          total=$(jq '. | length' workflows.json)
          running=$(jq '[.[] | select(.state == "in_progress")] | length' workflows.json)
          successful=$(jq '[.[] | select(.state == "completed")] | length' workflows.json)

          echo "total_workflows=$total" >> $GITHUB_ENV
          echo "running_workflows=$running" >> $GITHUB_ENV
          echo "successful_workflows=$successful" >> $GITHUB_ENV
          {
            echo "workflows_summary<<EOF"
            cat workflows_summary.md
            echo "EOF"
          } >> $GITHUB_ENV

      - name: üîé Fetch Workflow Runs for Current Issue/PR
        id: fetch-specific-status
        env:
          GH_TOKEN: ${{ github.token || secrets.BOT_TOKEN }}
        run: |
          ISSUE_PR_NUMBER=${{ github.event.inputs.number || github.event.pull_request.number || github.event.issue.number }}
          BRANCH=${{ github.head_ref || github.ref_name }}

          echo "Fetching workflows for issue/PR #$ISSUE_PR_NUMBER on branch $BRANCH..."

          gh run list --json name,conclusion,status,event,workflowDatabaseId,headBranch,headSha --limit 50 > issue_workflows.json

          if [ ! -s issue_workflows.json ]; then
            echo "No specific workflows found for this issue/PR." > issue_workflows_summary.md
            exit 0
          fi

          relevant_workflows=$(jq --arg branch "$BRANCH" '[.[] | select((.status == "completed" or .status == "in_progress") and .headBranch == $branch)]' issue_workflows.json)

          echo "| Workflow Name           | Conclusion  | Status     | Event   |" > issue_workflows_summary.md
          echo "|-------------------------|-------------|-----------|---------|" >> issue_workflows_summary.md
          if [ "$relevant_workflows" != "[]" ]; then
            jq -r '.[] | "| \(.name) | \(.conclusion // "N/A") | \(.status) | \(.event) |"' <<< "$relevant_workflows" >> issue_workflows_summary.md
          else
            echo "| No relevant workflows for this issue/PR | N/A | N/A | N/A |" >> issue_workflows_summary.md
          fi

          {
            echo "issue_workflows_summary<<EOF"
            cat issue_workflows_summary.md
            echo "EOF"
          } >> $GITHUB_ENV

      - name: üë§ Add Status Comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN || secrets.BOT_TOKEN }}
          issue-number:
            ${{ github.event.inputs.number || github.event.pull_request.number || github.event.issue.number || 27614 }}
          body: |
            > [!TIP]
            > **Issue/PR Number:** ${{ github.event.pull_request.number || github.event.issue.number }}
            > **Manual Dispatch Number:** ${{ github.event.inputs.number || 'N/A' }}
            > **Total Workflows:** ${{ env.total_workflows || 'N/A' }}

            ### üëå Workflows Summary for PR

            ${{ env.issue_workflows_summary || 'No workflows found for this issue/PR.' }}

            Thanks  
            Your Hamster üêπ <code>PF78VAPPKLZ2</code>
