#####################################################
# All Rights Reserved. 2020 - Present. (offensive-vk)
#####################################################
image: ubuntu

stages:
  - health_check
  - upload
  - refresh
  - visualize_metrics
  - celebrate

# Stage 1: Health Check
health_check:
  stage: health_check
  script:
    - echo "Performing health check on the environment..."
    - apt update && apt install curl -y
    - curl -I https://gitlab.com | head -n 1
    - echo "Health check completed."
  only:
    - schedule

# Stage 2: Upload Repository
upload:
  stage: upload
  script:
    - cat .github/secrets.json
    - echo "Checking out the complete repository..."
    - sleep 15
    - echo "Repository checked out successfully."
  artifacts:
    name: 'offensive-vk'
    paths:
      - .
  only:
    - schedule

# Stage 3: Refresh Repository
refresh:
  stage: refresh
  script:
    - sleep 10
    - echo "Compressing the repository into a ZIP file..." | base64
    - sleep 5
    - apt update; apt install zip tar neofetch -y
    - neofetch
    - echo "The repository has been compressed and verified."
    - zip -r offensive-vk.zip ./
    - sleep 10
  artifacts:
    name: 'offensive-vk-zip'
    paths:
      - offensive-vk.zip
  only:
    - schedule

# Stage 4: Visualize Metrics
visualize_metrics:
  stage: visualize_metrics
  script:
    - echo "Generating system metrics and stats..."
    - df -h
    - free -m
    - top -b -n 1 | head -15
    - echo "Metrics visualization completed."

# Stage 5: Celebrate Success
celebrate:
  stage: celebrate
  script:
    - echo "ðŸŽ‰ Congrats! The pipeline executed successfully. ðŸŽ‰"
    - echo "Playing a victory sound!"
    - apt install -y sox
    - play -n synth 0.5 sin 880
  only:
    - schedule

#####################################################
# All Rights Reserved. 2020 - Present. (offensive-vk)
#####################################################
